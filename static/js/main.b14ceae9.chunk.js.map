{"version":3,"sources":["components/SlateEditor/common/Button.jsx","components/SlateEditor/common/Icon.jsx","components/SlateEditor/utils/SlateUtilityFunctions.js","components/SlateEditor/utils/useTable.js","components/SlateEditor/Toolbar/toolbarGroups.js","components/SlateEditor/Elements/Color Picker/defaultColors.js","components/SlateEditor/utils/usePopup.jsx","components/SlateEditor/Elements/Color Picker/ColorPicker.jsx","components/SlateEditor/utils/link.js","components/SlateEditor/Elements/Link/LinkButton.jsx","components/SlateEditor/Elements/Embed/Embed.jsx","components/SlateEditor/utils/embed.js","components/SlateEditor/utils/paragraph.js","components/SlateEditor/utils/table.js","components/SlateEditor/Elements/Table/Table.jsx","components/SlateEditor/Elements/Table/InTable.jsx","components/SlateEditor/Toolbar/Toolbar.jsx","components/SlateEditor/plugins/withLinks.js","components/SlateEditor/plugins/withTable.js","components/SlateEditor/plugins/withEmbeds.js","components/SlateEditor/Toolbar/toolbarIcons/unlink.svg","components/SlateEditor/Elements/Link/Link.jsx","components/SlateEditor/Elements/Image/Image.jsx","components/SlateEditor/Elements/Video/Video.jsx","components/SlateEditor/Editor.jsx","components/App.jsx","index.js"],"names":["Button","props","children","format","active","rest","className","title","style","width","height","margin","iconList","bold","size","italic","strikethrough","underline","headingOne","headingTwo","headingThree","blockquote","superscript","subscript","alignLeft","alignCenter","alignRight","orderedList","unorderedList","link","image","video","add","table","row","column","removeTable","Icon","icon","alignment","list_types","sizeMap","small","normal","medium","huge","fontFamilyMap","sans","serif","monospace","addMarkData","editor","data","Editor","addMark","value","isMarkActive","marks","isBlockActive","nodes","match","n","isEditor","SlateElement","isElement","type","activeMark","defaultValue","color","bgColor","fontSize","fontFamily","useTable","useState","isTable","setIsTable","useEffect","selection","Element","tableNode","toolbarGroups","id","options","text","colors","usePopup","popupRef","showPopup","setShowPopup","handleDocumentClick","e","clickedComponent","target","current","contains","document","addEventListener","removeEventListener","logo","ColorPicker","setSelection","hexValue","setHexValue","validHex","setValidHex","colorPickerRef","useRef","showOptions","setShowOptions","isValideHexSix","RegExp","isValideHexThree","changeColor","clickedColor","getAttribute","Transforms","select","ReactEditor","focus","move","distance","ref","opacity","onClick","prev","map","index","data-value","background","textAlign","onSubmit","preventDefault","placeholder","onChange","newHex","test","border","removeLink","unwrapNodes","LinkButton","url","prompt","href","parent","path","parentPath","isVoid","insertNodes","at","Path","next","Range","isCollapsed","wrapNodes","split","insertLink","Embed","urlInputRef","showInput","setShowInput","formData","setFormData","borderBottom","embedData","embed","alt","console","log","mode","insertEmbed","TableUtil","insertTable","rows","columns","cellText","Array","from","length","newTable","createTableNode","insertCells","action","existingText","arr","push","fill","item","removeNodes","insertRow","oldTable","insertColumn","this","createTableCell","createRow","Table","tableOptionsRef","tableData","setTableData","v","i","bg","tableInput","setTableInput","obj","col","grp","onMouseOver","InTable","handleButtonClick","Toolbar","useSlate","defaultToolbarGroups","setToolbarGroups","filteredGroups","filter","element","elem","BlockButton","onMouseDown","isActive","isList","includes","isIndent","some","alignmentType","setNodes","toggleBlock","MarkButton","removeMark","toggleMark","Dropdown","changeMarkData","event","group","withLinks","isInline","withTable","deleteBackward","deleteForward","insertBreak","unit","cell","prevNodePath","before","cellPath","start","Point","equals","anchor","after","end","withEmbeds","Link","attributes","useSlateStatic","selected","useSelected","focused","useFocused","contentEditable","src","unlink","Image","display","justifyContent","boxShadow","frameBorder","listStylePosition","Leaf","leaf","code","textDecoration","backgroundColor","family","SlateEditor","useMemo","withHistory","withTables","withReact","createEditor","setValue","renderElement","useCallback","renderLeaf","newValue","padding","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b14ceae9.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Button =(props)=>{\r\n    const {children,format,active, ...rest} = props\r\n    return(\r\n        <button  className={active?'btnActive':'lol'} title={format}  {...rest} style={{width:'30px',height:'20px',margin:'0 2px'}}>\r\n            {children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport { MdFormatBold, MdFormatItalic, MdStrikethroughS, MdFormatUnderlined, MdFormatQuote, MdFormatAlignLeft, MdFormatAlignCenter, MdFormatAlignRight, MdFormatListNumbered, MdFormatListBulleted,MdInsertLink,MdVideoLibrary,MdImage,MdAdd} from 'react-icons/md'\r\nimport { BsTypeH1, BsTypeH2, BsTypeH3 } from 'react-icons/bs'\r\nimport { FaSuperscript,FaSubscript } from 'react-icons/fa'\r\nimport { AiOutlineTable, AiOutlineInsertRowBelow, AiOutlineInsertRowRight,AiOutlineDelete } from 'react-icons/ai'\r\nconst iconList={\r\n    bold:<MdFormatBold size={20}/>,\r\n    italic:<MdFormatItalic size={20}/>,\r\n    strikethrough:<MdStrikethroughS size={20}/>,\r\n    underline:<MdFormatUnderlined size={20}/>,\r\n    headingOne:<BsTypeH1 size={20}/>,\r\n    headingTwo:<BsTypeH2 size={20}/>,\r\n    headingThree:<BsTypeH3 size={20}/>,\r\n\r\n    blockquote:<MdFormatQuote size={20}/>,\r\n    superscript:<FaSuperscript size={15}/>,\r\n    subscript:<FaSubscript size={15}/>,\r\n    alignLeft:<MdFormatAlignLeft size={20}/>,\r\n    alignCenter:<MdFormatAlignCenter size={20}/>,\r\n    alignRight:<MdFormatAlignRight size={20}/>,\r\n    orderedList:<MdFormatListNumbered size={20}/>,\r\n    unorderedList:<MdFormatListBulleted size={20}/>,\r\n    link:<MdInsertLink size={20}/>,\r\n    image:<MdImage size={20}/>,\r\n    video:<MdVideoLibrary size={20}/>,\r\n    add:<MdAdd size={20}/>,\r\n    table:<AiOutlineTable size={20}/>,\r\n    row:<AiOutlineInsertRowBelow size={20}/>,\r\n    column:<AiOutlineInsertRowRight size={20}/>,\r\n    removeTable:<AiOutlineDelete size={20}/>\r\n}\r\n\r\n\r\n\r\n\r\nconst Icon = (props)=>{\r\n    const {icon} = props\r\n    return(\r\n        iconList[icon]\r\n    )\r\n}\r\n\r\nexport default Icon;","import { Editor, Transforms, Element as SlateElement } from \"slate\";\r\nimport { ReactEditor } from \"slate-react\";\r\n\r\nconst alignment = [\"alignLeft\", \"alignRight\", \"alignCenter\"];\r\nconst list_types = [\"orderedList\", \"unorderedList\"];\r\nexport const sizeMap = {\r\n  small: \"0.75em\",\r\n  normal: \"1em\",\r\n  medium: \"1.75em\",\r\n  huge: \"2.5em\"\r\n};\r\nexport const fontFamilyMap = {\r\n  sans: \"Helvetica,Arial, sans serif\",\r\n  serif: \"Georgia, Times New Roaman,serif\",\r\n  monospace: \"Monaco, Courier New,monospace\"\r\n};\r\nexport const toggleBlock = (editor, format) => {\r\n  const isActive = isBlockActive(editor, format);\r\n  const isList = list_types.includes(format);\r\n  const isIndent = alignment.includes(format);\r\n  const isAligned = alignment.some((alignmentType) =>\r\n    isBlockActive(editor, alignmentType)\r\n  );\r\n\r\n  /*If the node is already aligned and change in indent is called we should unwrap it first and split the node to prevent\r\n    messy, nested DOM structure and bugs due to that.*/\r\n  if (isAligned && isIndent) {\r\n    Transforms.unwrapNodes(editor, {\r\n      match: (n) =>\r\n        alignment.includes(\r\n          !Editor.isEditor(n) && SlateElement.isElement(n) && n.type\r\n        ),\r\n      split: true\r\n    });\r\n  }\r\n\r\n  /* Wraping the nodes for alignment, to allow it to co-exist with other block level operations*/\r\n  if (isIndent) {\r\n    Transforms.wrapNodes(editor, {\r\n      type: format,\r\n      children: []\r\n    });\r\n    return;\r\n  }\r\n  Transforms.unwrapNodes(editor, {\r\n    match: (n) =>\r\n      list_types.includes(\r\n        !Editor.isEditor(n) && SlateElement.isElement(n) && n.type\r\n      ),\r\n    split: true\r\n  });\r\n\r\n  Transforms.setNodes(editor, {\r\n    type: isActive ? \"paragraph\" : isList ? \"list-item\" : format\r\n  });\r\n  if (isList && !isActive) {\r\n    Transforms.wrapNodes(editor, {\r\n      type: format,\r\n      children: []\r\n    });\r\n  }\r\n};\r\nexport const addMarkData = (editor, data) => {\r\n  Editor.addMark(editor, data.format, data.value);\r\n};\r\nexport const toggleMark = (editor, format) => {\r\n  const isActive = isMarkActive(editor, format);\r\n\r\n  if (isActive) {\r\n    Editor.removeMark(editor, format);\r\n  } else {\r\n    Editor.addMark(editor, format, true);\r\n  }\r\n  ReactEditor.focus(editor);\r\n};\r\nexport const isMarkActive = (editor, format) => {\r\n  const marks = Editor.marks(editor);\r\n\r\n  return marks ? marks[format] === true : false;\r\n};\r\n\r\nexport const isBlockActive = (editor, format) => {\r\n  const [match] = Editor.nodes(editor, {\r\n    match: (n) =>\r\n      !Editor.isEditor(n) && SlateElement.isElement(n) && n.type === format\r\n  });\r\n\r\n  return !!match;\r\n};\r\n\r\nexport const activeMark = (editor, format) => {\r\n  const defaultMarkData = {\r\n    color: \"black\",\r\n    bgColor: \"black\",\r\n    fontSize: \"normal\",\r\n    fontFamily: \"sans\"\r\n  };\r\n  const marks = Editor.marks(editor);\r\n  const defaultValue = defaultMarkData[format];\r\n  return marks?.[format] ?? defaultValue;\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { Editor, Element } from 'slate'\r\n\r\n\r\nconst useTable = (editor)=>{\r\n    const [isTable,setIsTable] = useState(false);\r\n    useEffect(()=>{\r\n        if(editor.selection){\r\n            const [tableNode] = Editor.nodes(editor,{\r\n                match:n => !Editor.isEditor(n) && Element.isElement(n) && n.type === 'table'\r\n            })\r\n            \r\n            setIsTable(!!tableNode);\r\n        }\r\n         // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[editor.selection])\r\n\r\n    return isTable;\r\n}\r\n\r\nexport default useTable;","const toolbarGroups = [\r\n  [\r\n    {\r\n      id: 1,\r\n      format: \"fontFamily\",\r\n      type: \"dropdown\",\r\n      options: [\r\n        { text: \"Sans Serif\", value: \"sans\" },\r\n        { text: \"Serif\", value: \"serif\" },\r\n        { text: \"MonoSpace\", value: \"monospace\" }\r\n      ]\r\n    },\r\n    {\r\n      id: 2,\r\n      format: \"fontSize\",\r\n      type: \"dropdown\",\r\n      options: [\r\n        { text: \"Small\", value: \"small\" },\r\n        { text: \"Normal\", value: \"normal\" },\r\n        { text: \"Medium\", value: \"medium\" },\r\n        { text: \"Huge\", value: \"huge\" }\r\n      ]\r\n    }\r\n  ],\r\n  [\r\n    {\r\n      id: 3,\r\n      format: \"bold\",\r\n      type: \"mark\"\r\n    },\r\n    {\r\n      id: 4,\r\n      format: \"italic\",\r\n      type: \"mark\"\r\n    },\r\n    {\r\n      id: 5,\r\n      format: \"underline\",\r\n      type: \"mark\"\r\n    },\r\n    {\r\n      id: 6,\r\n      format: \"strikethrough\",\r\n      type: \"mark\"\r\n    }\r\n  ],\r\n  [\r\n    {\r\n      id: 7,\r\n      format: \"color\",\r\n      type: \"color-picker\"\r\n    },\r\n    {\r\n      id: 8,\r\n      format: \"bgColor\",\r\n      type: \"color-picker\"\r\n    }\r\n  ],\r\n  [\r\n    {\r\n      id: 9,\r\n      format: \"superscript\",\r\n      type: \"mark\"\r\n    },\r\n    {\r\n      id: 10,\r\n      format: \"subscript\",\r\n      type: \"mark\"\r\n    }\r\n  ],\r\n  [\r\n    {\r\n      id: 11,\r\n      format: \"headingOne\",\r\n      type: \"block\"\r\n    },\r\n    {\r\n      id: 12,\r\n      format: \"headingTwo\",\r\n      type: \"block\"\r\n    },\r\n    {\r\n      id: 13,\r\n      format: \"headingThree\",\r\n      type: \"block\"\r\n    },\r\n    {\r\n      id: 14,\r\n      format: \"blockquote\",\r\n      type: \"block\"\r\n    }\r\n  ],\r\n  [\r\n    {\r\n      id: 15,\r\n      format: \"orderedList\",\r\n      type: \"block\"\r\n    },\r\n    {\r\n      id: 16,\r\n      format: \"unorderedList\",\r\n      type: \"block\"\r\n    }\r\n  ],\r\n  [\r\n    {\r\n      id: 17,\r\n      format: \"alignLeft\",\r\n      type: \"block\"\r\n    },\r\n    {\r\n      id: 18,\r\n      format: \"alignCenter\",\r\n      type: \"block\"\r\n    },\r\n    {\r\n      id: 19,\r\n      format: \"alignRight\",\r\n      type: \"block\"\r\n    }\r\n  ],\r\n  [\r\n    {\r\n      id: 20,\r\n      format: \"link\",\r\n      type: \"link\"\r\n    },\r\n    {\r\n      id: 21,\r\n      format: \"image\",\r\n      type: \"embed\"\r\n    },\r\n    {\r\n      id: 22,\r\n      format: \"video\",\r\n      type: \"embed\"\r\n    },\r\n    {\r\n      id: 23,\r\n      type: \"table\"\r\n    }\r\n  ],\r\n\r\n  [\r\n    {\r\n      id: 24,\r\n      type: \"inTable\"\r\n    }\r\n  ]\r\n];\r\n\r\nexport default toolbarGroups;\r\n","export const colors = [\"#000000\",\"#e60000\",\r\n    \"#ff9900\",\r\n    \"#ffff00\",\r\n    \"#008a00\",\r\n    \"#0066cc\",\r\n    \"#9933ff\",\r\n    \"#ffffff\",\r\n    \"#facccc\",\r\n    \"#ffebcc\",\r\n    \"#ffffcc\",\r\n    \"#cce8cc\",\r\n    \"#cce0f5\",\r\n    \"#ebd6ff\",\r\n    \"#bbbbbb\",\r\n    \"#f06666\",\r\n    \"#ffc266\",\r\n    \"#ffff66\",\r\n    \"#66b966\",\r\n    \"#66a3e0\",\r\n    \"#c285ff\",\r\n    \"#888888\",\r\n    \"#a10000\",\r\n    \"#b26b00\",\r\n    \"#b2b200\",\r\n    \"#006100\",\r\n    \"#0047b2\",\r\n    \"#6b24b2\",\r\n    \"#444444\",\r\n    \"#5c0000\",\r\n    \"#663d00\",\r\n    \"#666600\",\r\n    \"#003700\",\r\n    \"#002966\",\r\n    \"#3d1466\"]","import { useState, useEffect } from 'react'\r\n\r\n\r\nfunction usePopup(popupRef) {\r\n    const [showPopup,setShowPopup] = useState(false);\r\n    \r\n    useEffect(()=>{\r\n        const handleDocumentClick = (e)=>{\r\n            const clickedComponent = e.target;\r\n            if(!popupRef?.current?.contains(clickedComponent)){\r\n                setShowPopup(false);\r\n            }\r\n        }\r\n        document.addEventListener('click',handleDocumentClick);\r\n\r\n        return ()=>{\r\n            document.removeEventListener('click',handleDocumentClick)\r\n        }\r\n         // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return [showPopup,setShowPopup];\r\n}\r\n\r\nexport default usePopup\r\n\r\n","import React, { useRef, useState } from \"react\";\r\nimport { MdFormatColorText, MdFormatColorFill, MdCheck } from \"react-icons/md\";\r\nimport \"./ColorPicker.css\";\r\nimport { colors } from \"./defaultColors.js\";\r\nimport { addMarkData, activeMark } from \"../../utils/SlateUtilityFunctions.js\";\r\nimport { Transforms } from \"slate\";\r\nimport usePopup from \"../../utils/usePopup\";\r\nimport { ReactEditor } from \"slate-react\";\r\n\r\nconst logo = {\r\n  color: <MdFormatColorText size={20} />,\r\n  bgColor: <MdFormatColorFill size={20} />\r\n};\r\nconst ColorPicker = ({ format, editor }) => {\r\n  const [selection, setSelection] = useState();\r\n  const [hexValue, setHexValue] = useState(\"\");\r\n  const [validHex, setValidHex] = useState();\r\n  const colorPickerRef = useRef(null);\r\n  const [showOptions, setShowOptions] = usePopup(colorPickerRef);\r\n\r\n  const isValideHexSix = new RegExp(\"^#[0-9A-Za-z]{6}\");\r\n  const isValideHexThree = new RegExp(\"^#[0-9A-Za-z]{3}\");\r\n\r\n  const changeColor = (e) => {\r\n    const clickedColor = e.target.getAttribute(\"data-value\");\r\n    selection && Transforms.select(editor, selection);\r\n\r\n    addMarkData(editor, { format, value: clickedColor });\r\n    ReactEditor.focus(editor);\r\n    Transforms.move(editor, {\r\n      distance: 1\r\n    });\r\n    setShowOptions(false);\r\n  };\r\n  const toggleOption = () => {\r\n    setSelection(editor.selection);\r\n    setShowOptions((prev) => !prev);\r\n  };\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validHex) return;\r\n    selection && Transforms.select(editor, selection);\r\n\r\n    addMarkData(editor, { format, value: hexValue });\r\n    setShowOptions(false);\r\n    setValidHex(\"\");\r\n    setHexValue(\"\");\r\n  };\r\n  const handleHexChange = (e) => {\r\n    e.preventDefault();\r\n    const newHex = e.target.value;\r\n    setValidHex(isValideHexSix.test(newHex) || isValideHexThree.test(newHex));\r\n    setHexValue(newHex);\r\n  };\r\n  return (\r\n    <div className=\"color-picker popup-wrapper\" ref={colorPickerRef}>\r\n      <button\r\n        style={{\r\n          color: showOptions ? \"black\" : activeMark(editor, format),\r\n          opacity: \"1\"\r\n        }}\r\n        className={showOptions ? \"clicked\" : \"\"}\r\n        onClick={toggleOption}\r\n      >\r\n        {logo[format]}\r\n      </button>\r\n      {showOptions && (\r\n        <div className=\"popup\">\r\n          <div className=\"color-options\">\r\n            {colors.map((color, index) => {\r\n              return (\r\n                <div\r\n                  key={index}\r\n                  data-value={color}\r\n                  onClick={changeColor}\r\n                  className=\"option\"\r\n                  style={{ background: color }}\r\n                ></div>\r\n              );\r\n            })}\r\n          </div>\r\n          <p style={{ textAlign: \"center\", opacity: \"0.7\", width: \"100%\" }}>\r\n            OR\r\n          </p>\r\n          <form onSubmit={handleFormSubmit}>\r\n            <div\r\n              className=\"hexPreview\"\r\n              style={{ background: validHex ? hexValue : \"#000000\" }}\r\n            ></div>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"#000000\"\r\n              value={hexValue}\r\n              onChange={handleHexChange}\r\n              style={{\r\n                border:\r\n                  validHex === false ? \"1px solid red\" : \"1px solid lightgray\"\r\n              }}\r\n            />\r\n            <button style={{ color: validHex ? \"green\" : \"\" }} type={\"submit\"}>\r\n              <MdCheck size={20} />\r\n            </button>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorPicker;\r\n","import { Editor, Transforms, Path, Range, Element } from 'slate';\r\n\r\nexport const createLinkNode = (href,text) =>(\r\n    {\r\n        type:'link',\r\n        href,\r\n        children:[{ text }]\r\n    }\r\n)\r\n\r\nexport const insertLink = (editor,url)=>{\r\n    if(!url) return;\r\n\r\n    const { selection } = editor;\r\n    const link = createLinkNode(url,'Link');\r\n    if(!!selection){\r\n        const [parent, parentPath] = Editor.parent(editor,selection.focus.path);\r\n        if(parent.type === 'link'){\r\n            removeLink(editor);\r\n        }\r\n\r\n        //for image nodes, will be implemented later\r\n        if(editor.isVoid(parent)){\r\n            Transforms.insertNodes(editor, \r\n                {type:'paragraph',children:[link]},\r\n                {\r\n                    at:Path.next(parentPath),\r\n                    select:true\r\n                }\r\n\r\n            )\r\n        }\r\n        else if(Range.isCollapsed(selection)){\r\n            Transforms.insertNodes(editor,link, {select:true});\r\n        }\r\n        else{\r\n            Transforms.wrapNodes(editor,link,\r\n                {split:true}\r\n            )\r\n\r\n        }\r\n    }\r\n    else{\r\n        Transforms.insertNodes(editor,{type:'paragraph',children:[link]})\r\n    }\r\n};\r\n\r\nexport const removeLink = (editor) =>{\r\n    Transforms.unwrapNodes(editor,{\r\n        match:n => !Editor.isEditor(n) && Element.isElement(n) && n.type === 'link'\r\n    })\r\n};","import { insertLink } from '../../utils/link.js'\r\nimport Button from '../../common/Button'\r\nimport Icon from '../../common/Icon'\r\nimport {isBlockActive} from '../../utils/SlateUtilityFunctions.js'\r\nconst LinkButton = (props)=>{\r\n    const {editor} = props\r\n    const handleInsertLink = ()=>{\r\n        const url = prompt('Enter URL');\r\n        insertLink(editor,url)\r\n    }\r\n    return (\r\n        <Button active={isBlockActive(editor,'link')} format={'link'} onClick={handleInsertLink}>\r\n            <Icon icon='link'/>\r\n        </Button>\r\n    )\r\n}\r\n\r\n\r\nexport default LinkButton;","import React, {useRef, useState} from 'react';\r\nimport Button from '../../common/Button'\r\nimport Icon from '../../common/Icon'\r\nimport {isBlockActive} from '../../utils/SlateUtilityFunctions'\r\nimport usePopup from '../../utils/usePopup'\r\nimport {insertEmbed } from '../../utils/embed.js'\r\nconst Embed = ({editor,format}) =>{\r\n    const urlInputRef = useRef();\r\n    const [showInput,setShowInput] = usePopup(urlInputRef);\r\n    const [formData,setFormData] = useState({\r\n        url:'',\r\n        width:'',\r\n        height:''\r\n    })\r\n    const handleButtonClick = (e)=>{\r\n        e.preventDefault();\r\n        setShowInput(prev =>!prev);\r\n    }\r\n    const handleFormSubmit = (e)=>{\r\n        e.preventDefault();\r\n        insertEmbed(editor,{...formData},format);\r\n        setShowInput(false);\r\n        setFormData({\r\n            url:'',\r\n            width:'',\r\n            height:''\r\n        })\r\n    }\r\n    return (\r\n        <div ref={urlInputRef} className='popup-wrapper'>\r\n            <Button active={isBlockActive(editor,format)} style={{border: showInput?'1px solid lightgray':'',borderBottom: 'none'}}  format={format} onClick={handleButtonClick}>\r\n                <Icon icon={format}/>\r\n            </Button>\r\n            {\r\n                showInput&&\r\n                <div  className='popup'>\r\n                    <form onSubmit={handleFormSubmit}>\r\n                        <input type=\"text\" placeholder='Enter url' value={formData.url} onChange={e=>setFormData(prev =>({...prev,url:e.target.value}))}/>\r\n                        <input type=\"text\" placeholder='Enter width of frame' value={formData.width} onChange={e=>setFormData(prev =>({...prev,width:e.target.value}))} />\r\n                        <input type=\"text\" placeholder='Enter height of frame' value={formData.height} onChange={e=>setFormData(prev =>({...prev,height:e.target.value}))} />\r\n\r\n                        <Button type='submit'>Save</Button>\r\n                    </form>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Embed;","import { Transforms} from 'slate';\r\n\r\nimport {createParagraph} from './paragraph'\r\nexport const createImageNode = (alt,{url,width,height}) =>({\r\n    type:\"image\",\r\n    alt,\r\n    url,\r\n    width,\r\n    height,\r\n    children: [{text:\"\"}]\r\n});\r\nexport const createVideoNode = ({url,width,height})=>({\r\n    type:'video',\r\n    url,\r\n    width,\r\n    height,\r\n    children:[{text:\"\"}]\r\n})\r\n\r\nexport const insertEmbed = (editor,embedData,format) => {\r\n    const {url,width,height} = embedData;\r\n    if(!url) return;\r\n    embedData.width = width ?`${width}px` : '100%';\r\n    embedData.height = height ? `${height}px`:'auto'\r\n    const embed = format === 'image' ?  createImageNode(\"EditorImage\",embedData):createVideoNode(embedData);\r\n    \r\n    console.log(format);\r\n    Transforms.insertNodes(editor,embed,{select:true});\r\n    Transforms.insertNodes(editor,createParagraph(\"\"),{mode:'highest'})\r\n}","export const createParagraph = (text) => ({\r\n    type:'paragraph',\r\n    children:[{text}]\r\n})","import { Transforms, Editor, Range, Element } from \"slate\";\r\n\r\nexport class TableUtil {\r\n  constructor(editor) {\r\n    this.editor = editor;\r\n  }\r\n\r\n  insertTable = (rows, columns) => {\r\n    const [tableNode] = Editor.nodes(this.editor, {\r\n      match: (n) =>\r\n        !Editor.isEditor(n) && Element.isElement(n) && n.type === \"table\",\r\n      mode: \"highest\"\r\n    });\r\n\r\n    if (tableNode) return;\r\n    if (!rows || !columns) {\r\n      return;\r\n    }\r\n    const cellText = Array.from({ length: rows }, () =>\r\n      Array.from({ length: columns }, () => \"\")\r\n    );\r\n    const newTable = createTableNode(cellText);\r\n\r\n    Transforms.insertNodes(this.editor, newTable, {\r\n      mode: \"highest\"\r\n    });\r\n    Transforms.insertNodes(\r\n      this.editor,\r\n      { type: \"paragraph\", children: [{ text: \"\" }] },\r\n      { mode: \"highest\" }\r\n    );\r\n  };\r\n\r\n  insertCells = (tableNode, path, action) => {\r\n    let existingText = Array.from(tableNode.children, (rows) =>\r\n      Array.from(rows.children, (arr) => arr.children[0].text)\r\n    );\r\n    const columns = existingText[0].length;\r\n    if (action === \"row\") {\r\n      existingText.push(Array(columns).fill(\"\"));\r\n    } else {\r\n      existingText = Array.from(existingText, (item) => {\r\n        item.push(\"\");\r\n        return item;\r\n      });\r\n    }\r\n    const newTable = createTableNode(existingText);\r\n    Transforms.insertNodes(this.editor, newTable, {\r\n      at: path\r\n    });\r\n  };\r\n\r\n  removeTable = () => {\r\n    Transforms.removeNodes(this.editor, {\r\n      match: (n) =>\r\n        !Editor.isEditor(n) && Element.isElement(n) && n.type === \"table\",\r\n      mode: \"highest\"\r\n    });\r\n  };\r\n\r\n  insertRow = () => {\r\n    const { selection } = this.editor;\r\n    if (!!selection && Range.isCollapsed(selection)) {\r\n      const [tableNode] = Editor.nodes(this.editor, {\r\n        match: (n) =>\r\n          !Editor.isEditor(n) && Element.isElement(n) && n.type === \"table\"\r\n      });\r\n      if (tableNode) {\r\n        const [oldTable, path] = tableNode;\r\n        this.removeTable();\r\n        this.insertCells(oldTable, path, \"row\");\r\n      }\r\n    }\r\n  };\r\n\r\n  insertColumn = () => {\r\n    const { selection } = this.editor;\r\n    if (!!selection && Range.isCollapsed(selection)) {\r\n      const [tableNode] = Editor.nodes(this.editor, {\r\n        match: (n) =>\r\n          !Editor.isEditor(n) && Element.isElement(n) && n.type === \"table\"\r\n      });\r\n      if (tableNode) {\r\n        const [oldTable, path] = tableNode;\r\n        this.removeTable();\r\n        this.insertCells(oldTable, path, \"columns\");\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nconst createRow = (cellText) => {\r\n  const newRow = Array.from(cellText, (value) => createTableCell(value));\r\n  return {\r\n    type: \"table-row\",\r\n    children: newRow\r\n  };\r\n};\r\n\r\nconst createTableCell = (text) => {\r\n  return {\r\n    type: \"table-cell\",\r\n    children: [{ text }]\r\n  };\r\n};\r\n\r\nconst createTableNode = (cellText) => {\r\n  const tableChildren = Array.from(cellText, (value) => createRow(value));\r\n  let tableNode = { type: \"table\", children: tableChildren };\r\n  return tableNode;\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport Icon from \"../../common/Icon\";\r\nimport usePopup from \"../../utils/usePopup\";\r\nimport { Transforms } from \"slate\";\r\nimport { TableUtil } from \"../../utils/table.js\";\r\nimport \"./Table.css\";\r\n\r\nconst Table = ({ editor }) => {\r\n  const tableOptionsRef = useRef();\r\n  const [selection, setSelection] = useState();\r\n  const [showOptions, setShowOptions] = usePopup(tableOptionsRef);\r\n  const [tableData, setTableData] = useState({\r\n    row: 0,\r\n    column: 0\r\n  });\r\n  const [tableInput, setTableInput] = useState(\r\n    Array.from({ length: 6 }, () =>\r\n      Array.from({ length: 6 }, (v, i) => ({\r\n        bg: \"lightGray\",\r\n        column: i\r\n      }))\r\n    )\r\n  );\r\n\r\n  useEffect(() => {\r\n    const newTable = Array.from({ length: 6 }, (obj, row) =>\r\n      Array.from({ length: 6 }, (v, col) => ({\r\n        bg:\r\n          row + 1 <= tableData.row && col + 1 <= tableData.column\r\n            ? \"orange\"\r\n            : \"lightgray\",\r\n        column: col\r\n      }))\r\n    );\r\n    setTableInput(newTable);\r\n  }, [tableData]);\r\n  const table = new TableUtil(editor);\r\n\r\n  const handleButtonClick = () => {\r\n    setSelection(editor.selection);\r\n    setShowOptions((prev) => !prev);\r\n  };\r\n  const handleInsert = () => {\r\n    selection && Transforms.select(editor, selection);\r\n    setTableData({ row: -1, column: -1 });\r\n    table.insertTable(tableData.row, tableData.column);\r\n    setShowOptions(false);\r\n  };\r\n  return (\r\n    <div ref={tableOptionsRef} className=\"popup-wrapper\">\r\n      <button\r\n        style={{ border: showOptions ? \"1px solid lightgray\" : \"none\" }}\r\n        title=\"table\"\r\n        onClick={handleButtonClick}\r\n      >\r\n        <Icon icon=\"table\" />\r\n      </button>\r\n      {showOptions && (\r\n        <div className=\"popup\">\r\n          {tableData.row >= 1 && (\r\n            <div>\r\n              <i>{`${tableData.row} x ${tableData.column}`}</i>\r\n            </div>\r\n          )}\r\n          <div className=\"table-input\">\r\n            {tableInput.map((grp, row) =>\r\n              grp.map(({ column, bg }) => (\r\n                <div\r\n                  onClick={() => handleInsert()}\r\n                  onMouseOver={() =>\r\n                    setTableData({ row: row + 1, column: column + 1 })\r\n                  }\r\n                  className=\"table-unit\"\r\n                  style={{ border: `1px solid ${bg}` }}\r\n                ></div>\r\n              ))\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport Button from \"../../common/Button\";\r\nimport Icon from \"../../common/Icon\";\r\nimport { TableUtil } from \"../../utils/table.js\";\r\n\r\nconst InTable = ({ editor }) => {\r\n  const table = new TableUtil(editor);\r\n\r\n  const handleButtonClick = (action) => {\r\n    switch (action) {\r\n      case \"row\":\r\n        table.insertRow();\r\n        break;\r\n      case \"column\":\r\n        table.insertColumn();\r\n        break;\r\n      case \"remove\":\r\n        table.removeTable();\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Button format=\"insert row\" onClick={() => handleButtonClick(\"row\")}>\r\n        <Icon icon=\"row\" />\r\n      </Button>\r\n      <Button\r\n        format=\"insert column\"\r\n        onClick={() => handleButtonClick(\"column\")}\r\n      >\r\n        <Icon icon=\"column\" />\r\n      </Button>\r\n      <Button format=\"remove table\" onClick={() => handleButtonClick(\"remove\")}>\r\n        <Icon icon=\"removeTable\" />\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InTable;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSlate } from \"slate-react\";\r\nimport Button from \"../common/Button\";\r\nimport Icon from \"../common/Icon\";\r\nimport {\r\n  toggleBlock,\r\n  toggleMark,\r\n  isMarkActive,\r\n  addMarkData,\r\n  isBlockActive,\r\n  activeMark\r\n} from \"../utils/SlateUtilityFunctions.js\";\r\nimport useTable from \"../utils/useTable.js\";\r\nimport defaultToolbarGroups from \"./toolbarGroups.js\";\r\nimport \"./styles.css\";\r\nimport ColorPicker from \"../Elements/Color Picker/ColorPicker\";\r\nimport LinkButton from \"../Elements/Link/LinkButton\";\r\nimport Embed from \"../Elements/Embed/Embed\";\r\nimport Table from \"../Elements/Table/Table\";\r\nimport InTable from \"../Elements/Table/InTable\";\r\nconst Toolbar = () => {\r\n  const editor = useSlate();\r\n  const isTable = useTable(editor);\r\n  const [toolbarGroups, setToolbarGroups] = useState(defaultToolbarGroups);\r\n  useEffect(() => {\r\n    let filteredGroups = [...defaultToolbarGroups];\r\n    if (isTable) {\r\n      filteredGroups = toolbarGroups.map((grp) =>\r\n        grp.filter((element) => element.type !== \"block\")\r\n      );\r\n      filteredGroups = filteredGroups.filter((elem) => elem.length);\r\n    }\r\n    setToolbarGroups(filteredGroups);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isTable]);\r\n  const BlockButton = ({ format }) => {\r\n    return (\r\n      <Button\r\n        active={isBlockActive(editor, format)}\r\n        format={format}\r\n        onMouseDown={(e) => {\r\n          e.preventDefault();\r\n          toggleBlock(editor, format);\r\n        }}\r\n      >\r\n        <Icon icon={format} />\r\n      </Button>\r\n    );\r\n  };\r\n  const MarkButton = ({ format }) => {\r\n    return (\r\n      <Button\r\n        active={isMarkActive(editor, format)}\r\n        format={format}\r\n        onMouseDown={(e) => {\r\n          e.preventDefault();\r\n          toggleMark(editor, format);\r\n        }}\r\n      >\r\n        <Icon icon={format} />\r\n      </Button>\r\n    );\r\n  };\r\n  const Dropdown = ({ format, options }) => {\r\n    return (\r\n      <select\r\n        value={activeMark(editor, format)}\r\n        onChange={(e) => changeMarkData(e, format)}\r\n      >\r\n        {options.map((item, index) => (\r\n          <option key={index} value={item.value}>\r\n            {item.text}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    );\r\n  };\r\n  const changeMarkData = (event, format) => {\r\n    event.preventDefault();\r\n    const value = event.target.value;\r\n    addMarkData(editor, { format, value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"toolbar\">\r\n      {toolbarGroups.map((group, index) => (\r\n        <span key={index} className=\"toolbar-grp\">\r\n          {group.map((element) => {\r\n            switch (element.type) {\r\n              case \"block\":\r\n                return <BlockButton key={element.id} {...element} />;\r\n              case \"mark\":\r\n                return <MarkButton key={element.id} {...element} />;\r\n              case \"dropdown\":\r\n                return <Dropdown key={element.id} {...element} />;\r\n              case \"link\":\r\n                return (\r\n                  <LinkButton\r\n                    key={element.id}\r\n                    active={isBlockActive(editor, \"link\")}\r\n                    editor={editor}\r\n                  />\r\n                );\r\n              case \"embed\":\r\n                return (\r\n                  <Embed\r\n                    key={element.id}\r\n                    format={element.format}\r\n                    editor={editor}\r\n                  />\r\n                );\r\n              case \"color-picker\":\r\n                return (\r\n                  <ColorPicker\r\n                    key={element.id}\r\n                    activeMark={activeMark}\r\n                    format={element.format}\r\n                    editor={editor}\r\n                  />\r\n                );\r\n              case \"table\":\r\n                return <Table key={element.id} editor={editor} />;\r\n              case \"inTable\":\r\n                return isTable ? (\r\n                  <InTable key={element.id} editor={editor} />\r\n                ) : null;\r\n              default:\r\n                return <button>Invalid Button</button>;\r\n            }\r\n          })}\r\n        </span>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","const withLinks = (editor)=>{\r\n\r\n    const { isInline } = editor;\r\n    editor.isInline = (element) => \r\n        element.type === 'link' ? true :isInline(element);\r\n    return editor;\r\n};\r\n\r\nexport default withLinks;","import { Editor, Range, Point, Element} from 'slate'\r\n\r\nconst withTable = (editor) =>{\r\n    const { deleteBackward, deleteForward, insertBreak} = editor\r\n\r\n    editor.deleteBackward = unit =>{\r\n        const { selection }= editor;\r\n        if (selection) {\r\n            const [cell] = Editor.nodes(editor, {\r\n              match: n =>\r\n                !Editor.isEditor(n) &&\r\n                Element.isElement(n) &&\r\n                n.type === 'table-cell',\r\n            })\r\n            const prevNodePath = Editor.before(editor,selection)\r\n\r\n            const [tableNode] = Editor.nodes(editor,{\r\n              at:prevNodePath,\r\n              match:n =>!Editor.isEditor(n) && Element.isElement && n.type === 'table-cell'\r\n            })\r\n\r\n            if (cell) {\r\n              const [, cellPath] = cell\r\n\r\n              const start = Editor.start(editor, cellPath)\r\n              if (Point.equals(selection.anchor, start)) {\r\n                return\r\n              }\r\n            }\r\n            if(!cell && tableNode){\r\n              return\r\n            }\r\n          }\r\n      \r\n          deleteBackward(unit)\r\n    }\r\n    editor.deleteForward = unit => {\r\n        const { selection } = editor\r\n        if (selection && Range.isCollapsed(selection)) {\r\n          const [cell] = Editor.nodes(editor, {\r\n            match: n =>\r\n              !Editor.isEditor(n) &&\r\n              Element.isElement(n) &&\r\n              n.type === 'table-cell',\r\n          })\r\n          \r\n          const prevNodePath = Editor.after(editor,selection)\r\n          const [tableNode] = Editor.nodes(editor,{\r\n            at:prevNodePath,\r\n            match:n =>!Editor.isEditor(n) && Element.isElement && n.type === 'table-cell'\r\n          })\r\n          \r\n          \r\n          if (cell) {\r\n            const [, cellPath] = cell\r\n            const end = Editor.end(editor, cellPath)\r\n    \r\n            if (Point.equals(selection.anchor, end)) {\r\n              return\r\n            }\r\n          }\r\n          if(!cell && tableNode){\r\n            return\r\n          }\r\n        }\r\n    \r\n        deleteForward(unit)\r\n      }\r\n    \r\n      editor.insertBreak = () => {\r\n        const { selection } = editor\r\n        if (selection) {\r\n          const [table] = Editor.nodes(editor, {\r\n            match: n =>\r\n              !Editor.isEditor(n) &&\r\n              Element.isElement(n) &&\r\n              n.type === 'table',\r\n          })\r\n    \r\n          if (table) {\r\n            return\r\n          }\r\n        }\r\n    \r\n        insertBreak()\r\n      }\r\n    return editor;\r\n}\r\n\r\n\r\nexport default withTable;","const withEmbeds = (editor) =>{\r\n    \r\n    const { isVoid } = editor;\r\n\r\n    editor.isVoid = (element) => \r\n        ['video','image'].includes(element.type) ? true : isVoid(element);\r\n    return editor;\r\n}\r\n\r\n\r\nexport default withEmbeds","export default __webpack_public_path__ + \"static/media/unlink.b8761030.svg\";","import React from 'react';\r\nimport { useFocused, useSelected, useSlateStatic } from 'slate-react'\r\n\r\nimport {removeLink} from '../../utils/link.js'\r\nimport unlink from '../../Toolbar/toolbarIcons/unlink.svg'\r\nimport './styles.css'\r\nconst Link = ({ attributes, element, children}) => {\r\n    const editor = useSlateStatic();\r\n    const selected = useSelected();\r\n    const focused = useFocused();\r\n    return (\r\n        <div className='link' >\r\n            <a href={element.href} {...attributes}>{children}</a>\r\n            {selected && focused && (\r\n                <div className='link-popup' contentEditable='false'>\r\n                    <a href={element.href}>{element.href}</a>\r\n                    <button onClick={()=>removeLink(editor)}><img src={unlink} alt=\"\" /></button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Link","import React from 'react'\r\nimport { useSelected, useFocused } from \"slate-react\";\r\nimport \"./Image.css\";\r\n\r\nconst Image = ({ attributes, element, children }) => {\r\n  const {url,width,height} = element;\r\n  const selected = useSelected();\r\n  const focused = useFocused();\r\n  console.log(width,height);\r\n  return (\r\n    <div\r\n      {...attributes}\r\n      className='element-image'\r\n      style={{display:'flex',justifyContent:'center',boxShadow: selected && focused &&  '0 0 3px 3px lightgray'}}\r\n    >\r\n      <div contentEditable={false} style={{width:width,height:height}}>\r\n        <img alt={element.alt} src={url}/>\r\n      </div>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\nexport default Image;","import React from 'react'\r\n\r\nimport \"./Video.css\";\r\n\r\nconst Image = ({ attributes, element, children }) => {\r\n\r\n    const {url,width,height} = element;\r\n  return (\r\n    <div\r\n      {...attributes}\r\n      className='element-video'\r\n      style={{display:'flex',justifyContent:'center'}}\r\n    >\r\n      <div contentEditable={false} style={{width:width,height:height}}>\r\n        <div className='video-wrapper'>\r\n        <iframe src={url} frameBorder=\"0\" title={url}/>\r\n        </div>\r\n      </div>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\nexport default Image;","import React, { useCallback, useMemo, useState } from 'react';\r\nimport { createEditor } from 'slate';\r\nimport { withHistory } from \"slate-history\";\r\nimport {Slate, Editable, withReact } from 'slate-react';\r\nimport Toolbar from './Toolbar/Toolbar'\r\nimport { sizeMap, fontFamilyMap } from './utils/SlateUtilityFunctions.js'\r\nimport withLinks from './plugins/withLinks.js'\r\nimport withTables from './plugins/withTable.js'\r\nimport withEmbeds from './plugins/withEmbeds.js'\r\nimport './Editor.css'\r\nimport Link from'./Elements/Link/Link'\r\nimport Image from './Elements/Image/Image'\r\nimport Video from './Elements/Video/Video'\r\n\r\n\r\nconst Element = (props) =>{\r\n\r\n    const {attributes, children, element} = props;\r\n    \r\n    switch(element.type){\r\n        case 'headingOne':\r\n            return <h1 {...attributes}>{children}</h1>\r\n        case 'headingTwo':\r\n            return <h2 {...attributes}>{children}</h2>\r\n        case 'headingThree':\r\n            return <h3 {...attributes}>{children}</h3>\r\n        case 'blockquote':\r\n            return <blockquote {...attributes}>{children}</blockquote>\r\n        case 'alignLeft':\r\n            return <div style={{textAlign:'left',listStylePosition:'inside'}} {...attributes}>{children}</div>\r\n        case 'alignCenter':\r\n            return <div style={{textAlign:'center',listStylePosition:'inside'}} {...attributes}>{children}</div>\r\n        case 'alignRight':\r\n            return <div style={{textAlign:'right',listStylePosition:'inside'}} {...attributes}>{children}</div>\r\n        case 'list-item':\r\n            return  <li {...attributes}>{children}</li>\r\n        case 'orderedList':\r\n            return <ol type='1' {...attributes}>{children}</ol>\r\n        case 'unorderedList':\r\n            return <ul {...attributes}>{children}</ul>\r\n        case 'link':\r\n            return <Link {...props}/>\r\n       \r\n        case 'table':\r\n            return <table>\r\n                <tbody {...attributes}>{children}</tbody>\r\n            </table>\r\n        case 'table-row':\r\n            return <tr {...attributes}>{children}</tr>\r\n        case 'table-cell':\r\n            return <td {...attributes}>{children}</td>\r\n        case 'image':\r\n            return <Image {...props}/>\r\n        case 'video':\r\n            return <Video {...props}/>\r\n        default :\r\n            return <p {...attributes}>{children}</p>\r\n    }\r\n}\r\nconst Leaf = ({ attributes, children, leaf }) => {\r\n    \r\n    if (leaf.bold) {\r\n      children = <strong>{children}</strong>\r\n    }\r\n  \r\n    if (leaf.code) {\r\n      children = <code>{children}</code>\r\n    }\r\n  \r\n    if (leaf.italic) {\r\n      children = <em>{children}</em>\r\n    }\r\n    if(leaf.strikethrough){\r\n        children = <span style={{textDecoration:'line-through'}}>{children}</span>\r\n    }\r\n    if (leaf.underline) {\r\n      children = <u>{children}</u>\r\n    }\r\n    if(leaf.superscript){\r\n        children = <sup>{children}</sup>\r\n    }\r\n    if(leaf.subscript){\r\n        children = <sub>{children}</sub>\r\n    }\r\n    if(leaf.color){\r\n        children = <span style={{color:leaf.color}}>{children}</span>\r\n    }\r\n    if(leaf.bgColor){\r\n        children = <span style={{backgroundColor:leaf.bgColor}}>{children}</span>\r\n    }\r\n    if(leaf.fontSize){\r\n        const size = sizeMap[leaf.fontSize]\r\n        children = <span style={{fontSize:size}}>{children}</span>\r\n    }\r\n    if(leaf.fontFamily){\r\n        const family = fontFamilyMap[leaf.fontFamily]\r\n        children = <span style={{fontFamily:family}}>{children}</span>\r\n    }\r\n    return <span {...attributes}>{children}</span>\r\n}\r\nconst SlateEditor = ()=>{\r\n    const editor = useMemo(() => withHistory(withEmbeds(withTables(withLinks(withReact(createEditor()))))), []);\r\n    \r\n    const [value,setValue] = useState([\r\n        {\r\n            type:'paragaph',\r\n            children:[{text:'First line of text in Slate JS. '}],\r\n        },\r\n    ]);\r\n\r\n\r\n    const renderElement = useCallback(props => <Element {...props}/>,[])\r\n\r\n    const renderLeaf = useCallback(props => {\r\n        return <Leaf {...props} />\r\n    }, [])\r\n\r\n    \r\n    return (\r\n            <Slate editor = {editor} value = {value} onChange = {newValue => setValue(newValue)} >\r\n                <Toolbar />\r\n                <div className=\"editor-wrapper\" style={{border:'1px solid #f3f3f3',padding:'0 10px'}}>\r\n                    <Editable\r\n                        placeholder='Write something'\r\n                        renderElement={renderElement} \r\n                        renderLeaf={renderLeaf}\r\n                    />\r\n                </div>\r\n        </Slate>\r\n        \r\n    )\r\n}\r\n\r\nexport default SlateEditor","import '../stylesheets/App.css';\nimport Something from './SlateEditor/Editor'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Something/>\n    </div>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}